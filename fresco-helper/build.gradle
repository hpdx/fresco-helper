apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdk
        targetSdkVersion rootProject.ext.targetSdk
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])

    api 'com.facebook.fresco:fresco:' + rootProject.ext.frescoVersion
    api 'com.facebook.fresco:animated-base:' + rootProject.ext.frescoVersion
    api 'com.facebook.fresco:animated-gif:' + rootProject.ext.frescoVersion
    api 'com.facebook.fresco:webpsupport:' + rootProject.ext.frescoVersion
    api 'com.facebook.fresco:animated-webp:' + rootProject.ext.frescoVersion
    api 'com.davemorrissey.labs:subsampling-scale-image-view-androidx:' + rootProject.ext.SSIVVersion

    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'com.google.android.material:material:1.5.0'
}

// Maven Group ID
group = "com.facebook.fresco.helper"
// library的版本号，后面每次更新都需要更改这个值
version = rootProject.ext.frescoHelperVersion

// 生成jar包的task
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

// 生成jarDoc的task
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    options.encoding = "UTF-8"
    failOnError false // 忽略注释语法错误，如果用jdk1.8你的注释写的不规范就编译不过。
}

// 生成javaDoc的jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}